pops --> procedure --> l

        class and objects.. oops machine languge...

oop --> object oriented programming --> o

        class objetc ....
        real time application....
        sclable application... using oops concept...

#NAMIG CONVENTION 

1) class name --> first letter capital and join with camel case
2) variable name --> first letter small and join with camel case
3) function name --> first letter small and join with camel case



4 pillars of oops
----------------------------------------------------------------------
1) encapsulation
    1) data hiding
        access specifiers
            public
            private
            protected
    2) data binding
        1) static binding
            : binding the data at compile time
        2) dynamic binding
            : binding the data at run time
    3) data abstraction

    4) data encapsulation
        :class and object ,method and function, variable and data member
        constructor and destructor

class: class is a collection of objects, data member and member function, class is a blue print of object

object: object is a real time entity, 
object is a instance of class, object is a run time entity

class    object 

Fruit     apple    applle is fruit and fruit has apple
Vehicle   car      car is Vehicle and Vehicle has car

School    student  
Shose      Nike


: class keyword.. 
--------------------------------------------------------------------------------------------------------------


2) abstraction
    1) abstract class
    2) abstract method
    3) interface
    
3) inheritance
    1) single inheritance
    2) multilevel inheritance
    3) multiple inheritance  --> '
        1 parent class and multiple child class
        2 multiple parent class and 1 child class --> pointer
    4) hybrid inheritance : multiple + multilevel
    5) hierarchical inheritance : 1 parent class and multiple child class


                                    x

           a               b               c               d
     p          q   m             n  o             p   q   r   s       




:inheritance : --> child class can use prop of parent class this process called inheritance, but parent class
can not use property of child class

use: ->code reusability
     ->code optimization
     ->code extensibility
     ->code maintainability




4) polymorphism        
    1) compile time polymorphism
        1) function overloading
        2) operator overloading
    2) run time polymorphism
        1) function overriding
        2) virtual function



constructor and destructor:

constructor : constructor is special function whihc has same name as class name:
use of constructor is to initialize the data member of class / instance variable of class and object of class

constructor is called automatically when object is created
constructor is called only once when object is created
constructor does not return any value
constructor can have parameter

in cpp every class must have constructor:

compiler will provide default constructor if developer does not provide any constructor

type:
    1) default constructor / zero parameter constructor
        : constructor which does not have any parameter



    2) parameterized constructor
        : constructor which has parameter
    3) copy constructor
        : constructor which has parameter of same class type
    4) destructor
        : destructor is special function which has same name as class name but with ~ sign


